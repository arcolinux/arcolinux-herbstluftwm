#!/usr/bin/env bash

function run {
  if ! pgrep $1 ;
  then
    $@&
  fi
}

# this is a simple config for herbstluftwm

#Find out your monitor name with xrandr or arandr (save and you get this line)
#xrandr --output VGA-1 --primary --mode 1360x768 --pos 0x0 --rotate normal
#xrandr --output DP2 --primary --mode 1920x1080 --rate 60.00 --output LVDS1 --off &
#xrandr --output LVDS1 --mode 1366x768 --output DP3 --mode 1920x1080 --right-of LVDS1
#xrandr --output HDMI2 --mode 1920x1080 --pos 1920x0 --rotate normal --output HDMI1 --primary --mode 1920x1080 --pos 0x0 --rotate normal --output VIRTUAL1 --off

#change your keyboard if you need it
#setxkbmap -layout be

#Autostart applications
pkill -u $USER '^compton$'
compton  --config $HOME/.config/herbstluftwm/compton.conf &
/usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1 &
/usr/lib/xfce4/notifyd/xfce4-notifyd &

xsetroot -solid '#000000'
xsetroot -cursor_name left_ptr &

#keybindings are in config of sxhkd - interchangeable with other TWM
sxhkd &

#feh --bg-scale ~/.config/herbstluftwm/wall.png &
feh --bg-scale /usr/share/backgrounds/arcolinux/abstract-warm-heart-4560x2160.jpg
conky -c $HOME/.config/herbstluftwm/system-overview &
run variety &
nm-applet &
pamac-tray &
xfce4-power-manager &
numlockx on &
blueberry-tray &
# nitrogen --restore &
# caffeine &
# vivaldi-stable &
# firefox &
# thunar &
# dropbox &
# run insync &
# discord &
# spotify &
# atom &

#herbstluftwm start
hc() {
    herbstclient "$@"
}

hc emit_hook reload

# remove all existing keybindings
hc keyunbind --all
# horizontal tiling as standard
hc set_layout horizontal

# keybindings
# if you have a super key you will be much happier with Mod set to Mod4
#Mod=Mod1  # Use alt as the main modifier
Mod=Mod4   # Use the super key as the main modifier
TERMINAL=termite

hc keybind $Mod-Shift-x quit
hc keybind $Mod-Shift-r reload
hc keybind $Mod-Shift-q close
hc keybind $Mod-q close
#set in sxhkd
#hc keybind $Mod-Return spawn ${TERMINAL:-xterm} # use your $TERMINAL with xterm as fallback
#hc keybind Control-Mod1-t spawn ${TERMINAL:-xterm}

# basic movement
# focusing clients
hc keybind $Mod-Left  focus left
hc keybind $Mod-Down  focus down
hc keybind $Mod-Up    focus up
hc keybind $Mod-Right focus right
hc keybind $Mod-h     focus left
hc keybind $Mod-j     focus down
hc keybind $Mod-k     focus up
hc keybind $Mod-l     focus right

# moving clients
hc keybind $Mod-Shift-Left  shift left
hc keybind $Mod-Shift-Down  shift down
hc keybind $Mod-Shift-Up    shift up
hc keybind $Mod-Shift-Right shift right
hc keybind $Mod-Shift-h     shift left
hc keybind $Mod-Shift-j     shift down
hc keybind $Mod-Shift-k     shift up
hc keybind $Mod-Shift-l     shift right

# splitting frames
# create an empty frame at the specified direction
hc keybind $Mod-u       split   bottom  0.5
hc keybind $Mod-o       split   right   0.5
# let the current frame explode into subframes
hc keybind $Mod-Control-space split explode

# resizing frames
resizestep=0.05
hc keybind $Mod-Control-h       resize left +$resizestep
hc keybind $Mod-Control-j       resize down +$resizestep
hc keybind $Mod-Control-k       resize up +$resizestep
hc keybind $Mod-Control-l       resize right +$resizestep
hc keybind $Mod-Control-Left    resize left +$resizestep
hc keybind $Mod-Control-Down    resize down +$resizestep
hc keybind $Mod-Control-Up      resize up +$resizestep
hc keybind $Mod-Control-Right   resize right +$resizestep

# tags
tag_names=( {1..10} )
#tag_names=("1" "2" "3" "4" "5" "6" "7" "8" "9" "10")
#tag_names=("I" "II" "III" "IV" "V" "VI" "VII" "VIII" "IX" "X")
#tag_names=("\61612" "\61899" "\61947" "\61635" "\61502" "\61501" "\61705" "\61564" "\62150" "\61872" )

#Qwerty
#tag_keys=( {1..10} 0 )
#Belgian azerty
tag_keys=( ampersand eacute quotedbl apostrophe parenleft section egrave exclam ccedilla agrave )
#French azerty
#tag_keys=( ampersand eacute quotedbl apostrophe parenleft minus egrave underscore ccedilla agrave )

hc rename default "${tag_names[0]}" || true
for i in ${!tag_names[@]} ; do
    hc add "${tag_names[$i]}"
    key="${tag_keys[$i]}"
    if ! [ -z "$key" ] ; then
        hc keybind "$Mod-$key" use_index "$i"
        hc keybind "$Mod-Shift-$key" chain , move_index "$i" , use_index "$i"
    fi
done


#NOT NEEDED ANYMORE - See tag_keys variable
#FRENCH AZERTY KEYBOARD GOTO TAG
# hc keybind "$Mod-ampersand" use_index 0
# hc keybind "$Mod-eacute" use_index 1
# hc keybind "$Mod-quotedbl" use_index 2
# hc keybind "$Mod-apostrophe" use_index 3
# hc keybind "$Mod-parenleft" use_index 4
# hc keybind "$Mod-minus" use_index 5
# hc keybind "$Mod-egrave" use_index 6
# hc keybind "$Mod-underscore" use_index 7
# hc keybind "$Mod-ccedilla" use_index 8
# hc keybind "$Mod-agrave" use_index 9

#FRENCH AZERTY KEYBOARD MOVE TO TAG
# hc keybind "$Mod-Shift-ampersand" chain , move_index 0 ,  use_index 0
# hc keybind "$Mod-Shift-eacute" chain , move_index 1 ,  use_index 1
# hc keybind "$Mod-Shift-quotedbl" chain , move_index 2 ,  use_index 2
# hc keybind "$Mod-Shift-apostrophe" chain , move_index 3 ,  use_index 3
# hc keybind "$Mod-Shift-parenleft" chain , move_index 4 ,  use_index 4
# hc keybind "$Mod-Shift-minus" chain , move_index 5,  use_index 5
# hc keybind "$Mod-Shift-egrave" chain , move_index 6 ,  use_index 6
# hc keybind "$Mod-Shift-underscore" chain , move_index 7 ,  use_index 7
# hc keybind "$Mod-Shift-ccedilla" chain , move_index 8 ,  use_index 8
# hc keybind "$Mod-Shift-agrave" chain , move_index 9 ,  use_index 9

#BELGIAN AZERTY KEYBOARD GOTO TAG
# hc keybind "$Mod-ampersand" use_index 0
# hc keybind "$Mod-eacute" use_index 1
# hc keybind "$Mod-quotedbl" use_index 2
# hc keybind "$Mod-apostrophe" use_index 3
# hc keybind "$Mod-parenleft" use_index 4
# hc keybind "$Mod-section" use_index 5
# hc keybind "$Mod-egrave" use_index 6
# hc keybind "$Mod-exclam" use_index 7
# hc keybind "$Mod-ccedilla" use_index 8
# hc keybind "$Mod-agrave" use_index 9

#BELGIAN AZERTY KEYBOARD MOVE TO TAG
# hc keybind "$Mod-Shift-ampersand" chain , move_index 0 ,  use_index 0
# hc keybind "$Mod-Shift-eacute" chain , move_index 1 , use_index 1
# hc keybind "$Mod-Shift-quotedbl" chain , move_index 2 , use_index 2
# hc keybind "$Mod-Shift-apostrophe" chain , move_index 3 , use_index 3
# hc keybind "$Mod-Shift-parenleft" chain , move_index 4 , use_index 4
# hc keybind "$Mod-Shift-section" chain , move_index 5 , use_index 5
# hc keybind "$Mod-Shift-egrave" chain , move_index 6 , use_index 6
# hc keybind "$Mod-Shift-exclam" chain , move_index 7 , use_index 7
# hc keybind "$Mod-Shift-ccedilla" chain , move_index 8 , use_index 8
# hc keybind "$Mod-Shift-agrave" chain , move_index 9 , use_index 9

# layouting
hc keybind $Mod-r remove
hc keybind $Mod-s floating toggle
hc keybind $Mod-f fullscreen toggle
hc keybind $Mod-p pseudotile toggle
# The following cycles through the available layouts within a frame, but skips
# layouts, if the layout change wouldn't affect the actual window positions.
# I.e. if there are two windows within a frame, the grid layout is skipped.
hc keybind $Mod-space                                                           \
            or , and . compare tags.focus.curframe_wcount = 2                   \
                     . cycle_layout +1 vertical horizontal max grid    \
               , cycle_layout +1

# mouse
hc mouseunbind --all
hc mousebind $Mod-Button1 move
hc mousebind $Mod-Button2 zoom
hc mousebind $Mod-Button3 resize

# focus
hc keybind $Mod-BackSpace   cycle_monitor
hc keybind $Mod-Tab         use_index +1 --skip-visible
hc keybind $Mod-Shift-Tab   use_index -1 --skip-visible
hc keybind $Mod-c cycle
hc keybind $Mod-i jumpto urgent

# theme
hc attr theme.tiling.reset 1
hc attr theme.floating.reset 1
hc set frame_border_active_color '#222222'
hc set frame_border_normal_color '#101010'
hc set frame_bg_normal_color '#565656'
hc set frame_bg_active_color '#6790EB'
hc set frame_border_width 0
hc set always_show_frame 0
hc set frame_bg_transparent 1
hc set frame_transparent_width 0
hc set frame_gap 0
hc set focus_follows_mouse 1

#Customize herbstluftwm
hc attr theme.active.color '#6790EB'
hc attr theme.normal.color '#454545'
hc attr theme.urgent.color orange
hc attr theme.inner_width 1
hc attr theme.inner_color black
hc attr theme.border_width 3
hc attr theme.floating.border_width 4
hc attr theme.floating.outer_width 1
hc attr theme.floating.outer_color black
hc attr theme.active.inner_color '#0B0B21'
hc attr theme.active.outer_color '#6790EB'
hc attr theme.background_color '#141414'

#Bar & window gaps
hc pad 0 30 0 0
hc set window_gap 5
hc set frame_padding 0
hc set smart_window_surroundings 0
hc set smart_frame_surroundings 1
hc set mouse_recenter_gap 0

# rules
hc unrule -F
hc rule focus=on # normally focus new clients
#hc rule focus=off # normally do not focus new clients

#assign applications to workspaces or tags
# hc rule class~'(firefox|Vivaldi-stable|Vivaldi-snapshot|Chromium|Google-chrome)' tag=1
# hc rule class~'(Atom|Subl3)' tag=2
# hc rule class=Inkscape tag=3
# hc rule class=Gimp tag=4
# hc rule class~'(Meld|ristretto|Nitrogen)' tag=5
# hc rule class=vlc tag=6
# hc rule class~'(VirtualBox Manager|Vmplayer)' tag=7
# hc rule class~'(Thunar|Nemo|Caja|Nautilus)' tag=8
# hc rule class~'(Evolution|Geary)' tag=9
# hc rule class=Spotify tag=10

# give focus to most common terminals
#hc rule class~'(.*[Rr]xvt.*|.*[Tt]erm|Konsole)' focus=on
hc rule windowtype~'_NET_WM_WINDOW_TYPE_(DIALOG|UTILITY|SPLASH)' pseudotile=on
hc rule windowtype='_NET_WM_WINDOW_TYPE_DIALOG' focus=on
hc rule windowtype~'_NET_WM_WINDOW_TYPE_(NOTIFICATION|DOCK|DESKTOP)' manage=off
hc rule class=Oblogout fullscreen=on
hc rule class=Insync pseudotile=on
hc rule class=VirtualBox fullscreen=on

hc set tree_style '╾│ ├└╼─┐'

# unlock, just to be sure
hc unlock

#TRIALS

#dual monitor settings
#hc detect_monitors
#hc set_monitors 1920x1080+0+0 1920x1080+1920+30

# Set up multi monitors
# while [[ $(hc list_monitors | wc -l) -gt 1 ]]; do
#     hc remove_monitor 1
# done

# tags
# NUM_MONS=$(xrandr --current | grep "^\w.* connected" | wc -l)
# MON_RES=( $(xrandr --current | grep "^\w.* connected" | awk '{print $3}') )
# MON_NUMS=$( python -c "for i in range(${NUM_MONS}): print(i)" )
#
# for i in ${MON_NUMS[@]} ; do
#     echo "${i}"
#     if [[ $i == '0' ]]; then
#         hc move_monitor $i ${MON_RES[$i]};
#     else
#         hc add_monitor ${MON_RES[$i]};
#     fi
# done

#launching polybar on all monitors
#~/.config/polybar/launch.sh
# panel=~/.config/polybar/launch.sh
# [ -x "$panel" ] || panel=/etc/xdg/herbstluftwm/panel.sh
# for monitor in $(herbstclient list_monitors | cut -d: -f1) ; do
#     # start it on each monitor
#     "$panel" $monitor &
# done



#monitor setup
#hc detect_monitors
hc set_monitors 1920x1080+0+0 1920x1080+0+0

#launching polybar
~/.config/polybar/launch.sh
